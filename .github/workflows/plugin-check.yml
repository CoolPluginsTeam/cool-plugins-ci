name: WordPress Plugin Check (Reusable Workflow)

on:
  workflow_call:
    inputs:
      plugin-folder:
        description: "Folder name under /wp-content/plugins/ where the repo will be copied"
        required: true
        type: string

jobs:
  plugin-check:
    runs-on: ubuntu-latest
    env:
      WP_CLI_ALLOW_ROOT: 1

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: wp
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost -proot"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout plugin code
        uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - name: Install WP-CLI
        run: |
          curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
          chmod +x wp-cli.phar
          sudo mv wp-cli.phar /usr/local/bin/wp

      - name: Wait for MySQL to be ready
        run: |
          echo "‚è≥ Waiting for MySQL to start..."
          for i in {1..20}; do
            if mysqladmin ping -h127.0.0.1 -uroot -proot --silent; then
              echo "‚úÖ MySQL is ready!"
              break
            fi
            sleep 3
          done

      - name: Prepare WordPress test environment
        run: |
          mkdir -p wp-test
          cd wp-test
          wp core download --version=6.6 --allow-root
          wp config create --dbname=wp --dbuser=root --dbpass=root --dbhost=127.0.0.1 --skip-check --allow-root
          wp db query "CREATE DATABASE IF NOT EXISTS wp;" --allow-root
          wp core install --url=https://example.com --title="Plugin Check" \
            --admin_user=admin --admin_password=admin --admin_email=admin@example.com --allow-root

      - name: Install Plugin Check Plugin (PCP)
        working-directory: wp-test
        run: wp plugin install plugin-check --activate --allow-root

      - name: Copy Plugin for Testing
        run: |
          mkdir -p wp-test/wp-content/plugins/${{ inputs.plugin-folder }}
          rsync -av --exclude='wp-test' --exclude='.git' --exclude='.github' ./ wp-test/wp-content/plugins/${{ inputs.plugin-folder }}/

      - name: Debug plugin files
        run: |
          echo "Listing plugin directory contents..."
          ls -R wp-test/wp-content/plugins/${{ inputs.plugin-folder }}


      - name: Run Plugin Check
        id: run_check
        working-directory: wp-test
        run: |
          echo "üß™ Running WordPress Plugin Check for: ${{ inputs.plugin-folder }}"
      
          # Create the error-logs directory if it doesn't exist
          mkdir -p "wp-content/plugins/error-logs"
      
          # Run plugin check and save output to plugin-specific log file
          wp plugin check ${{ inputs.plugin-folder }} --allow-root | tee "wp-content/plugins/error-logs/${{ inputs.plugin-folder }}-error-log.txt"
      
          echo "‚úÖ Log saved at: wp-content/plugins/error-logs/${{ inputs.plugin-folder }}-error-log.txt"

      - name: Debug plugin files after PCP run
        run: |
          echo "Listing plugin directory contents after PCP run..."
          ls -R wp-test/wp-content/plugins/error-logs

      - name: Get Error Log File Content
        run: |
          echo "üîç Error Log File Content:"
          cat wp-test/wp-content/plugins/error-logs/${{ inputs.plugin-folder }}-error-log.txt
      
      - name: Read Plugin Check Log Content
        id: read_log
        run: |
          echo "log_content<<EOF" >> $GITHUB_OUTPUT
          cat wp-test/wp-content/plugins/error-logs/${{ inputs.plugin-folder }}-error-log.txt >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Send Plugin Check Log via Email
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          secure: true
          username: ${{ secrets.SMTP_USERNAME }}
          password: "jebk dviy mqds jocv"
          to: vishabjeetcoolplugins@gmail.com
          from: CoolPlugins CI Bot <${{ secrets.SMTP_USERNAME }}>
          subject: "‚ùå Plugin Check Failed for ${{ inputs.plugin-folder }} Because PCP errors found."
          html_body: |
            üëã <strong>Hello CoolPlugins Team,</strong>
            <br>
            <br>
            The <strong>PCP</strong> for plugin <strong>`${{ inputs.plugin-folder }}`</strong> has <strong>failed</strong> Because of errors found. Please fix the errors and try again.
            <br>
            <h2>üìã Summary</h2>
            - <strong>Repository:</strong> `${{ github.repository }}`
            <br>
            - <strong>Workflow Run:</strong> [View Logs](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
            <br>
            - <strong>Checked Folder:</strong> `${{ inputs.plugin-folder }}`
            <br>
            <br>
            <h2>‚ö†Ô∏è Detected Issues / Errors</h2>
            <br>
            <code>
              <pre style="background:#f6f8fa;padding:12px;border-radius:8px;font-family:'Courier New',monospace;font-size:15px;white-space:pre-wrap;line-height:1.5;">
                ${{ steps.read_log.outputs.log_content }}
              </pre>
            </code>
            <br>
            Best regards, <br>
            ‚Äî <strong>üß† CoolPlugins CI Bot</strong>

