name: WordPress Plugin Check (Reusable Workflow)

on:
  workflow_call:
    inputs:
      plugin-folder:
        description: "Folder name under /wp-content/plugins/ where the repo will be copied"
        required: true
        type: string

jobs:
  plugin-check:
    runs-on: ubuntu-latest
    env:
      WP_CLI_ALLOW_ROOT: 1

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: wp
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost -proot"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout plugin code
        uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - name: Install WP-CLI
        run: |
          curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
          chmod +x wp-cli.phar
          sudo mv wp-cli.phar /usr/local/bin/wp

      - name: Wait for MySQL to be ready
        run: |
          echo "⏳ Waiting for MySQL to start..."
          for i in {1..20}; do
            if mysqladmin ping -h127.0.0.1 -uroot -proot --silent; then
              echo "✅ MySQL is ready!"
              break
            fi
            sleep 3
          done

      - name: Prepare WordPress test environment
        run: |
          mkdir -p wp-test
          cd wp-test
          wp core download --version=6.6 --allow-root
          wp config create --dbname=wp --dbuser=root --dbpass=root --dbhost=127.0.0.1 --skip-check --allow-root
          wp db query "CREATE DATABASE IF NOT EXISTS wp;" --allow-root
          wp core install --url=https://example.com --title="Plugin Check" \
            --admin_user=admin --admin_password=admin --admin_email=admin@example.com --allow-root

      - name: Install Plugin Check Plugin (PCP)
        working-directory: wp-test
        run: wp plugin install plugin-check --activate --allow-root

      - name: Copy Plugin for Testing
        run: |
          mkdir -p wp-test/wp-content/plugins/${{ inputs.plugin-folder }}
          rsync -av --exclude='wp-test' --exclude='.git' --exclude='.github' ./ wp-test/wp-content/plugins/${{ inputs.plugin-folder }}/

      - name: Debug plugin files
        run: |
          echo "Listing plugin directory contents..."
          ls -R wp-test/wp-content/plugins/


      - name: Run Plugin Check
        working-directory: wp-test
        run: wp plugin check ${{ inputs.plugin-folder }} --allow-root
